{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/phonebook.js","components/Notification.js","App.js","index.js"],"names":["Filter","filterWord","handleFilterChange","value","onChange","PersonForm","addPerson","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","type","Persons","persons","handleDeletePerson","map","person","key","name","number","onClick","id","baseUrl","axios","get","then","response","data","newObject","post","delete","put","Notification","message","text","className","App","useState","setPersons","setNewName","setNewNumber","setFilterWord","notification","setNotification","useEffect","phoneService","counter","length","generateNewIdGenerator","updateNotification","setTimeout","personsToShow","filter","toLowerCase","includes","event","target","preventDefault","personIdx","indexOf","newEntry","concat","window","confirm","newPerson","console","log","personToDelete","find","catch","error","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64c1d646.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Filter = ({ filterWord, handleFilterChange }) => {\n  return (\n    <div>\n      filter shown with\n      <input value={filterWord} onChange={handleFilterChange} />\n    </div>\n  )\n}\n\nexport default Filter;","import React from \"react\";\n\nconst PersonForm = ({\n  addPerson,\n  newName,\n  handleNameChange,\n  newNumber,\n  handleNumberChange\n}) => {\n  return (\n    <form onSubmit={addPerson}>\n      <div>\n        name: <input value={newName} onChange={handleNameChange} />\n      </div>\n      <div>\n        phone: <input value={newNumber} onChange={handleNumberChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default PersonForm;\n","import React from \"react\";\n\nconst Persons = ({ persons,handleDeletePerson }) => {\n  return (\n    <>\n      {persons.map(person => (\n        <div key={person.name}>\n          {person.name} {person.number}\n          <button onClick={() => handleDeletePerson(person.id)}>Delete</button>\n        </div>\n      ))}\n    </>\n  );\n};\n\nexport default Persons;\n","import axios from 'axios';\n\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then(response => response.data);\n}\n\nconst remove = id => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request;\n}\n\nconst update = (newObject) => {\n  const request = axios.put(`${baseUrl}/${newObject.id}`, newObject);\n  return request.then(response => response.data);\n}\n\nexport default { getAll, create, remove, update }","import React from \"react\";\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  } \n  const { text, type } = message;\n\n  if (type === \"error\" || type === \"success\") {\n    return (\n      <div className={type}>\n        {text}\n      </div>\n    )\n  } else {\n    return null;\n  }\n  \n}\n\nexport default Notification","import React, { useState, useEffect } from \"react\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\nimport phoneService from \"./services/phonebook\";\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [filterWord, setFilterWord] = useState(\"\");\n  const [notification, setNotification] = useState(null);\n\n  useEffect(() => {\n    phoneService.getAll().then(persons => setPersons(persons));\n  }, []);\n\n  const generateNewIdGenerator = () => {\n    let counter = persons.length;\n    return () => ++counter;\n  };\n\n  const newIdGenerator = generateNewIdGenerator();\n\n  const handleNameChange = event => setNewName(event.target.value);\n\n  const handleNumberChange = event => setNewNumber(event.target.value);\n\n  const handleFilterChange = event => setFilterWord(event.target.value);\n\n  const updateNotification = message => {\n    setNotification(message);\n    setTimeout(() => setNotification(null), 3000);\n  };\n\n  const handleDeletePerson = id => {\n    const personToDelete = persons.find(person => person.id === id);\n    const result = window.confirm(`Delete ${personToDelete.name}`);\n    if (result) {\n      phoneService\n        .remove(id)\n        .then(() => {\n          setPersons(persons.filter(person => person.id !== id));\n        })\n        .catch(error => {\n          updateNotification({text: `Information of ${personToDelete.name} has already been removed from server`, type: \"error\"});\n          setPersons(persons.filter(person => person.id !== personToDelete.id));\n        });\n    }\n  };\n\n  const addPerson = event => {\n    event.preventDefault();\n    const personIdx = persons.map(person => person.name).indexOf(newName);\n    if (personIdx === -1) {\n      const newPerson = { name: newName, number: newNumber};\n      phoneService.create(newPerson).then(newEntry => {\n        updateNotification({text: `Added ${newEntry.name}`, type: \"success\"});\n        setPersons(persons.concat(newEntry));\n      });\n    } else {\n      const result = window.confirm(\n        `${newName} is already added to phonebook, replace the old number with a new one?`\n      );\n      if (result) {\n        const newPerson = { ...persons[personIdx], number: newNumber };\n        phoneService.update(newPerson).then(newEntry => {\n          updateNotification({text: `Updated ${newEntry.name} number`, type: \"success\"});\n          setPersons(\n            persons.map(person =>\n              person.id === newPerson.id ? newEntry : person\n            )\n          );\n        });\n        console.log(persons);\n      }\n    }\n    setNewName(\"\");\n    setNewNumber(\"\");\n  };\n\n  const personsToShow = persons.filter(person =>\n    person.name.toLowerCase().includes(filterWord.toLowerCase())\n  );\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notification} />\n      <Filter filterWord={filterWord} handleFilterChange={handleFilterChange} />\n      <h2>Add a new</h2>\n      <PersonForm\n        addPerson={addPerson}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n      />\n      <h3>Numbers</h3>\n      <Persons\n        persons={personsToShow}\n        handleDeletePerson={handleDeletePerson}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}